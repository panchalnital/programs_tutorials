API(Application programimg interface)
Rest API (REpresentational State Transfer)

Rest Api set of Rules:
    =>Uniform Interface
    =>Client-Server
    =>Stateless
    =>Cacheable
    =>Layered system
    =>Code on Demand 

Rest API (REpresentational State Transfer)
=>set of guidelines which helps in creating a system where application can easily communicate with each other

Rest Guidelines:
    
    => Separation client and server :- the implemenation of client and the implemenatation of the server can be done indeoendently without each knowing both the other
    
    =>stateless: http request not store client made ,no session,no history
    
    =>Uniform interface:- identify of resources by URL
                        www.abc.com/api/v1/products
    
    =>cacheable ;- the cabeable constraint requiores that a response should implicity or explicitly lable itself as cacheable or no-cacheable
   
    =>Layered system: the layered system style allow an architecture to be composed of Hierarchical Lyear like MVC is Layered system


    Web APi Authentication &JWT :
        =>Basic Authentication  : menas verifying a user who is accessing the system or web api 
            ->the user passes their credentails[username and password ] on post request
            ->credentials are verified
            ->a session will intiate to accept the subsequest request without validating the user again 


        =>API Key Authentication
            API Key difference API pass on header 
        
        =>Token based Authentication
            1:client application send request Authentication server a valid credentials
            2:web api server send token cient as response
            3:client apllication the user the token to access the restricted resource in next request until the token valid
            4:if access token is expried ,then the client request new access token by using Refresh token

        =>OAuth
            OAuth is standard for crating token based authentocation and authorication 
        =>JWT Authentication
            JWT(JSON web token)token based authentocation where JWT a token Format
            
            JWT Token 
               Header : algirethem:'HS256', TYpe:"JWT"
               Payload: { 'sub':'5656','name':'df'}
               Verify Signature: HMACSHA256{
                    base64urlencode(head)
                    base64urlencode(payload)
                    Secret
                        secret base64 encode
               }

        =>JWT token 

        Response Code :
            1xx: informational :communicates trenfer protocal level information
            2xx:success: client request was accepted succefuuly
            3xx: redirection :request is not complete, client must take some addtitonal action in order
            4xx: client error
            5xx: server error: the error is not due to web apic code but due some environment setting 

            *200 OK Indicates that the request has succeeded.
            *201 Created Indicates that the request has succeeded and a new resource has been created as a result.
            202 No found Accepted Indicates that the request has been received but not completed yet. It is typically used in log running requests and batch processing.

             301 Move Permanenlty
            *302 Found a Cache-Control or Expires header field.
             304 Not modify 

            *400 Bad Request The request could not be understood by the server due to incorrect syntax. The client SHOULD NOT repeat the request without modifications.
            *401 Unauthorized Indicates that the request requires user authentication information. The client MAY repeat the request with a suitable Authorization header field

            *403 Forbidden Unauthorized request. The client does not have access rights to the content. Unlike 401, the clientâ€™s identity is known to the server.
            *404 Not Found The server can not find the requested resource.
            408 Request Timeout

            *500 Internal Server Error The server encountered an unexpected condition that prevented it from fulfilling the request.

            502 Bad Gateway 
            The server got an invalid response while working as a gateway to get the response needed to handle the request.


Widely used HTTP Headers:
    Accept          :type of data client can understand
    Accept-Encoding :which encoding method client can understand
    Accept-Language :client is expecting the respomse in the mentioned langauge
    Content-Type     : specifies the media type of the resorces
    Host             : specifies the domain name
    Authorization    : used to pass credentials so that server can authenticate
    Access-Control-allow-origin : which origin is allwed to access the resources
    Access-Control-Allow-Method: which methods are allowed to access the cross-origin resorces



=======================================================================================================
SOAP (Simple Object Access Protocol) is a protocol designed to exchange data with the security of programs that are built on different platforms or using different programming languages. To get more information about SOAP 

REST (Representational State Transfer), is an API that follows a set of rules through which applications and servers communicate. It was specifically designed for working with components like files, objects, and media components

Factors

REST API

                                                                        RESTful API

Define :	=>Develops APIs to enable client-server interaction.	=> Web application follows REST architecture, providing interoperability between different systems.

Working :	=>Uses web services and is based on request and response.=>Working is completely based on REST applications.

Nature  :	=>Highly adaptable and user-friendly	=>Too flexible

Protocol:	=>Strong protocol and is more secure, built-in architecture layers.	 =>Has a transport protocol, is less secure as compared to REST.

Architecture:	=>Has a cacheable, client-server, stateless, layer system with a uniform interface.   =>All features of REST architecture along with some additional unique features.

Format of Data:	=>Format of data is based on HTTP.	=>Format of data is based on HTTP, text, and JSON.
Bandwidth:	=>This consumes minimum bandwidth.	=>This consumes less bandwidth.

Cache:	=>It represents cacheable and non-cacheable data and displaces the non-cacheable data when not required.	 =>The client can access cacheable information anytime and anywhere.

==================================================
RESTful API application list:
Twitter: Twitter's API allows developers to access and interact with Twitter's data and services in a RESTful manner.

GitHub: GitHub's API provides access to its repository and user data using RESTful principles, making it easier for developers to integrate with the platform.

Facebook: Facebook offers a Graph API that follows RESTful principles, allowing developers to interact with user profiles and social data.

Salesforce: Salesforce provides a REST API that enables developers to integrate with its customer relationship management (CRM) services.

Google Maps: The Google Maps API supports RESTful requests for mapping and location-based services.

Amazon Web Services (AWS): AWS offers a variety of services, such as S3 for storage, that provide RESTful APIs for easy integration with cloud resources.

YouTube: YouTube's API allows developers to access video data and perform various actions in a RESTful manner.

Flickr: Flickr provides a RESTful API for accessing photos and photo-related information.

Instagram: Instagram's API allows developers to interact with user data, photos, and other content using RESTful calls.

Zendesk: Zendesk offers a REST API for integrating with its customer support and help desk services.


=============================================================================================
    Difference                  SOAP                        REST
1 style         protocol(set of rule and guildline)     Architectural style

2 function      functin derive transfer structure       data-derive access a resources for data
                information

3 data format   xml                                     permits many data formats,including plain text,html,xml
                                                         and json

4 security      suppoerts WS-security and ssl           Supports ssl and https
                WS(Web Services)(authentication, integrity, and 
                confidentiality)
5 Bandwidth     Requires more resourece and bandwith    requries fewer resources and is lighweight

6 data cache    can not be cached                       can be cached

7 payload handing   has a strict communnication contract    needs no knowledge of the api
                and needs knowlege of everyting before any
                    interaction

8. ACID         has build-in ACID complince to reduce       lacks ACID compliance
                anomalies                               
